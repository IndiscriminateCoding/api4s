swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
host: petstore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets:
    get:
      tags: [search]
      description: Returns all pets from with specified tags
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
    post:
      tags: [modify]
      description: Creates or update a pet in the store
      operationId: addPet
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewPet'
      responses:
        200:
          description: pet was updated
          schema:
            $ref: '#/definitions/Pet'
        201:
          description: pet was created
          schema:
            $ref: '#/definitions/Pet'
  /pets/{id}:
    get:
      tags: [search]
      description: Returns a pet with specified ID
      operationId: findPetById
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        404:
          description: pet not found
    delete:
      tags: [modify]
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: pet deleted
        404:
          description: pet not found
definitions:
  Pet:
    type: "object"
    required:
    - id
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string

  NewPet:
    type: "object"
    required:
    - name
    properties:
      name:
        type: string
      tag:
        type: string
